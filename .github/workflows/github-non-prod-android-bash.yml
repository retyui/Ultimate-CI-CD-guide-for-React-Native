name: Android Non-Prod (Github vs BuildJet) & Bash

on:
  push: # TODO: Remove this type after testing
    branches-ignore:
      - 'release/'
      - 'hotifix/'
  # Run on every pull request (except for release/* and hotfix/* branches)
  pull_request:
    branches-ignore:
      - 'release/'
      - 'hotifix/'
  # Manually trigger the workflow (https://docs.github.com/en/actions/managing-workflow-runs/manually-running-a-workflow#running-a-workflow)
  workflow_dispatch:


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true # Cancel previous runs of this workflow

jobs:
  build-android:
    name: Android Build
    strategy:
      matrix:
        runs-on: [ buildjet-4vcpu-ubuntu-2204, ubuntu-20.04 ]
    runs-on: ${{matrix.runs-on}}
    steps:
      - uses: actions/checkout@v3

      - name: Gradle wrapper cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('android/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Gradle cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-caches-

      - name: Yarn cache
        uses: actions/cache@v3
        id: node_cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarnV1-${{ hashFiles('./yarn.lock') }}

      - name: Install node_modules
        run: yarn install --frozen-lockfile
        if: steps.node_cache.outputs.cache-hit != 'true'


      - name: Build APK
        run: ./scripts/make-android-build.sh
        env:
          # required
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }} # custom `versionName` (see: docs/versioning.md)
          # optional
          REACT_NATIVE_ARCHITECTURES: arm64-v8a # speed up build (see: docs/speedingup.md)
          NO_MINIFY_JS: 1 # speed up build (see: docs/speedingup.md)

      # (optional) Use GitHub Actions artifacts to store the apk
      - name: Store artifacts on GitHub
        uses: actions/upload-artifact@v3
        with:
          path: android/app/build/outputs/apk/release/app-release.apk

      # (optional) Upload the apk to Firebase App Distribution
      - name: Distribute apk to Firebase App Distribution
        run: |
          source ./scripts/env.sh
          APP_ID=$FIREBASE_PROD_ANDROID_APP_ID ./scripts/distribute-to-firebase.sh
        env:
          # required
          APK_OR_IPA_PATH: android/app/build/outputs/apk/release/app-release.apk
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          # optional
          RELEASE_NOTES: Made by - ${{ github.actor }} - ${{ github.event.head_commit.message }}
