name: Android https://docs.github.com/en/actions
on: [push] # Run on every push to any branch

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true # Cancel previous runs of this workflow

jobs:
  build-android:
    name: Android Github Actions build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: Gradle wrapper cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('android/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Gradle cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-caches-

      - name: Yarn cache
        uses: actions/cache@v3
        id: node_cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('./yarn.lock') }}

      - name: Install node_modules
        run: yarn install --frozen-lockfile
        if: steps.node_cache.outputs.cache-hit != 'true'


      - name: Build arm64-v8a APK
        working-directory: ./android
        # Use `./gradlew bundleRelease` - for Play Market release
        run: ./gradlew assembleRelease -PreactNativeArchitectures=arm64-v8a --no-daemon
        #                              ^^^ build apk for x64 arm chips
        # if you want to build for other architectures (armeabi-v7a,arm64-v8a,x86,x86_64)
        # add them to the list or remove the `-PreactNativeArchitectures` flag
        # See:https://reactnative.dev/docs/build-speed#build-only-one-abi-during-development-android-only


      # (optional) Use GitHub Actions artifacts to store the apk
      - name: Store artifacts on GitHub
        uses: actions/upload-artifact@v3
        with:
          path: ./android/app/build/outputs/apk/release/app-release.apk

      # (optional) Upload the apk to Firebase App Distribution
      - name: Distribute apk to Firebase App Distribution
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          APK_PATH: ./android/app/build/outputs/apk/release/app-release.apk
          RELEASE_NOTES: Made by - ${{ github.actor }} # optional
        run: |
          source ./scripts/env.sh
          APP_ID=$FIREBASE_ANDROID_APP_ID ./scripts/distribute-to-firebase.sh
